https://neetcode.io/problems/is-anagram

/* Sorting solution space O(1) time (O(nlogn) + O(mlogm)) */
class Solution {
public:
    bool isAnagram(string s, string t) {
        sort(s.begin(), s.end());
        sort(t.begin(), t.end());

        return s == t;
    }
};

###########################################################################

/* hashmap solution space O(1) time (O(n + m)) */
class Solution {
public:
    bool isAnagram(string s, string t) {
        unordered_map<char,int> s_freq;
        unordered_map<char,int> t_freq;

        for (char c : s) {
            s_freq[c]++;
        }

        for (char c : t) {
            t_freq[c]++;
        }

        return s_freq == t_freq;
    }
};
